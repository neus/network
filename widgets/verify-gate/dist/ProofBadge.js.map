{
  "version": 3,
  "sources": ["../ProofBadge.jsx"],
  "sourcesContent": ["\"use client\";\n/**\n * NEUS ProofBadge Widget\n * Simple status display: verified/failed\n * @license Apache-2.0\n */\nimport React, { useEffect, useState } from 'react';\n\nexport function ProofBadge({\n  qHash,\n  size = 'sm',\n  uiLinkBase = 'https://neus.network',\n  showDot = true,\n  labelOverride,\n  proof\n}) {\n  const [status, setStatus] = useState(() => {\n    if (proof) {\n      const raw = String(proof?.status || '').toLowerCase();\n      return raw.includes('verified') ? 'verified' : 'failed';\n    }\n    return 'verified';\n  });\n\n  useEffect(() => {\n    // Skip fetch if qHash missing or proof object provided\n    if (!qHash || proof) return;\n    \n    let cancelled = false;\n    \n    async function checkStatus() {\n      try {\n        const res = await fetch(`https://api.neus.network/api/v1/verification/status/${qHash}`, {\n          headers: { Accept: 'application/json' }\n        });\n        \n        if (cancelled) return;\n\n        if (res.status === 401 || res.status === 403) {\n          setStatus('verified');\n          return;\n        }\n\n        const json = await res.json().catch(() => ({}));\n        const dataStatus = String(json?.data?.status || json?.status || '').toLowerCase();\n\n        // Only treat as verified when status explicitly indicates any verified class\n        const verified = dataStatus.includes('verified') || dataStatus.includes('partially_verified') || dataStatus.includes('verified_propagation_failed');\n\n        setStatus(verified ? 'verified' : 'failed');\n        \n      } catch (_) {\n        if (!cancelled) setStatus('failed');\n      }\n    }\n    \n    checkStatus();\n    \n    return () => {\n      cancelled = true;\n    };\n  }, [qHash, proof]);\n\n  const href = `${String(uiLinkBase).replace(/\\/$/, '')}/proof/${qHash}`;\n  const isSm = size === 'sm';\n  const height = isSm ? 24 : 28;\n  const padding = isSm ? '4px 8px' : '6px 10px';\n  const fs = isSm ? 12 : 13;\n\n  const style = {\n    display: 'inline-flex',\n    alignItems: 'center',\n    gap: 8,\n    textDecoration: 'none',\n    padding: showDot ? `0 ${isSm ? 10 : 12}px` : padding,\n    height: showDot ? height : 'auto',\n    borderRadius: 9999,\n    border: '1px solid rgba(148,163,184,0.24)',\n    background: 'rgba(2,6,23,0.65)',\n    color: '#E5E7EB',\n    fontWeight: showDot ? 600 : 700,\n    fontSize: fs,\n    whiteSpace: 'nowrap',\n    lineHeight: 1\n  };\n\n  const dotColor = status === 'verified' ? '#10b981' : '#ef4444';\n  const dotSize = isSm ? 6 : 8;\n  const label = labelOverride || (status === 'verified' ? 'Verified' : 'View Proof');\n  const logoSize = isSm ? 14 : 16;\n  const BRAND_CID = 'bafkreiefbrffecrifnzcn3hfksklw3vospkf244c5ijkizxtzbsm2vtnga';\n  const gateways = ['https://ipfs.neus.network/ipfs/', 'https://cloudflare-ipfs.com/ipfs/', 'https://ipfs.io/ipfs/'];\n  const [g, setG] = useState(0);\n\n  return (\n    <a href={href} target=\"_blank\" rel=\"noreferrer\" style={style} aria-label={label} title={label}>\n      <img\n        src={`${gateways[g]}${BRAND_CID}`}\n        alt=\"NEUS\"\n        width={logoSize}\n        height={logoSize}\n        loading=\"eager\"\n        decoding=\"async\"\n        referrerPolicy=\"no-referrer\"\n        onError={() => setG((i) => (i + 1) % gateways.length)}\n        style={{ display: 'inline-block', width: logoSize, height: logoSize, borderRadius: 4 }}\n      />\n      <span>{label}</span>\n      {showDot && (\n        <span aria-hidden style={{ width: dotSize, height: dotSize, borderRadius: '50%', background: dotColor, marginLeft: 4 }} />\n      )}\n    </a>\n  );\n}\n\nexport function NeusPillLink({\n  qHash,\n  uiLinkBase = 'https://neus.network',\n  label = 'View NEUS',\n  size = 'sm'\n}) {\n  const base = String(uiLinkBase).replace(/\\/$/, '');\n  const href = qHash ? `${base}/proof/${qHash}` : base;\n\n  const isSm = size === 'sm';\n  const height = isSm ? 24 : 28;\n  const padX = isSm ? 10 : 12;\n  const fs = isSm ? 12 : 13;\n\n  const style = {\n    display: 'inline-flex',\n    alignItems: 'center',\n    gap: 8,\n    textDecoration: 'none',\n    padding: `0 ${padX}px`,\n    height,\n    borderRadius: 9999,\n    border: '1px solid rgba(148,163,184,0.24)',\n    background: 'rgba(2,6,23,0.65)',\n    color: '#E5E7EB',\n    fontWeight: 600,\n    fontSize: fs,\n    whiteSpace: 'nowrap',\n    lineHeight: 1\n  };\n\n  const imgSize = isSm ? 14 : 16;\n\n  return (\n    <a href={href} target=\"_blank\" rel=\"noreferrer\" style={style} aria-label={label} title={label}>\n      <img\n        src=\"https://ipfs.neus.network/ipfs/bafkreiefbrffecrifnzcn3hfksklw3vospkf244c5ijkizxtzbsm2vtnga\"\n        alt=\"NEUS\"\n        width={imgSize}\n        height={imgSize}\n        style={{ display: 'inline-block', width: imgSize, height: imgSize, borderRadius: 4 }}\n      />\n      <span>{label}</span>\n    </a>\n  );\n}"],
  "mappings": "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",
  "names": []
}
